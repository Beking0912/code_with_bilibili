const ThousandNum = num => num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
const money = ThousandNum(20190214);
// money => "20,190,214"

/**
 * 理解：匹配的是后面是 3*n 个数字的非单词边界(\B)
 *      (\d{3})+(?!\d) 表示贪婪模式查找后面不是数字的 3*n 个数字
 * 
 * \B 非单词边界匹配
 * ?= 属于非捕获元，表示正向预查，在任何开始匹配圆括号内的正则表达式模式的位置来匹配搜索字符串
 * ?! 属于非捕获元，表示负向预查，在任何开始不匹配该正则表达式模式的位置来匹配搜索字符串
 * ()表示捕获分组，()会把每个分组里的匹配的值保存起来
 * 
 * exp1(?=exp2) 查找 exp2 前面的 exp1
 * exp1(?!exp2) 查找后面不是 exp2 的 exp1
 */