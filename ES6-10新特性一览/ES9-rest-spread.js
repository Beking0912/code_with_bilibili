/**
 * ES2015引入了Rest参数和扩展运算符。
 * 三个点（...）仅用于数组。
 * Rest参数语法允许我们将一个不定数量的参数表示为一个数组。
 *
 * 跟数组一样，Rest参数只能在声明的结尾处使用。
 * 此外，它只适用于每个对象的顶层，如果对象中嵌套对象则无法适用。
 * 
 * 可以使用扩展运算符拷贝一个对象，像是这样obj2 = {...obj1}，
 * 但是 这只是一个对象的浅拷贝。
 * 另外，如果一个对象A的属性是对象B，那么在克隆后的对象cloneB中，该属性指向对象B。
 */

// ES2018为对象解构提供了和数组一样的Rest参数（）和展开操作符，一个简单的例子：
const myObject = {
  a: 1,
  b: 2,
  c: 3
};

const { a, ...x } = myObject;
// a = 1
// x = { b: 2, c: 3 }

// 或者你可以使用它给函数传递参数：
restParam({
  a: 1,
  b: 2,
  c: 3
});

function restParam({ a, ...x }) {
  // a = 1
  // x = { b: 2, c: 3 }
}

// 扩展运算符可以在其他对象内使用，例如：
const obj1 = { a: 1, b: 2, c: 3 };
const obj2 = { ...obj1, z: 26 };
// obj2 is { a: 1, b: 2, c: 3, z: 26 }
